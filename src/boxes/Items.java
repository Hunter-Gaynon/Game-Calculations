package boxes;

public enum Items {

    // the game has a dissolve mechanic where some items can be instantly turned into wealth
    // since no public database exists with this data I felt an enum class would work perfectly

    UPGRADE_TOKEN(1,0),
    CRYSTAL_KEY(0,0),

    ANTIQUE_LAMP(3000,0),
    ZARAS_XP_LAMP(32000,0),
    INVENTION_XP_LAMP(65000,0),

    $1_SCROLL(420000,0),
    $5_BOND($1_SCROLL.getMarketValue() * 5,0),
    $10_BOND($1_SCROLL.getMarketValue() * 10,0),
    $25_BOND($1_SCROLL.getMarketValue() * 25,0),

    UPGRADE_TOKEN_PACK_5K(5000,0),
    UPGRADE_TOKEN_PACK_25K(25000,0),
    UPGRADE_TOKEN_PACK_100K(100000,0),

    LOOT_BOX(0,0),
    PROGRESSIVE_REWARD_BOX(5000,0),
    SUPER_MYSTERY_BOX(700,100),
    LAUNCH_CHEST(700000,0),
    MYSTERY_BOX(120,0),
    PVM_BOX(190,0),
    VOTE_MYSTERY_BOX(35000,0),

    DRAGON_MED_HELM(0,15),
    DRAGON_SPEAR(0,15),
    DRAGON_HALBERD(0,15),
    DRAGON_LONGSWORD(0,15),
    DRAGON_DAGGER(0,15),
    DRAGON_BATTLEAXE(0,15),
    DRAGON_MACE(0,15),
    DRAGON_2H_SWORD(0,15),
    DRAGON_BONES(100,0),

    DRAGON_PICKAXE(0,0),
    DRAGON_HATCHET(0,0),
    BANDOS_BOOTS(0,240),
    FIRE_CAPE(0,0),
    RUNNER_HAT_I(0,500),
    BARROWS_GLOVES_I(0,500),
    AMONITE_AXE(0,100),
    LEAFY_LONGBOW(0,100),
    SORCERY_STAFF(0,100),

    DEMONIC_SWORD(0,300),
    NATURE_BOW(0,500),
    ICEY_STAFF_OF_FESTIVE(0,500),

    DHAROKS_HELM(0,50),
    DHAROKS_PLATEBODY(0,50),
    DHAROKS_GREATAXE(0,50),
    DHAROKS_PLATELEGS(0,50),
    AHRIMS_HOOD(0,50),
    AHRIMS_ROBE_TOP(0,50),
    AHRIMS_ROBE_SKIRT(0,50),
    AHRIMS_STAFF(0,50),
    KARILS_COIF(0,50),
    KARILS_TOP(0,50),
    KARILS_SKIRT(0,50),
    KARILS_CROSSBOW(0,50),
    VERACS_HELM(0,50),
    VERACS_BRASSARD(0,50),
    VERACS_PLATESKIRT(0,50),
    VERACS_FLAIL(0,50),
    TORAGS_HELM(0,50),
    TORAGS_PLATEBODY(0,50),
    TORAGS_PLATELEGS(0,50),
    TORAGS_HAMMERS(0,50),

    KARILS_SET(0,250),
    DHAROKS_SET(0,250),
    AHRIMS_SET(0,250),
    TORAGS_SET(0,250),
    VERACS_SET(0,250),
    GUTHANS_SET(0,250),
    SKELETAL_ARMOUR_SET(0,0),

    ABYSSAL_WHIP(0,120),
    DARK_BOW(0,0),
    STAFF_OF_LIGHT(0,141),
    DRAGON_DEFENDER(0,0),
    DRAGON_BOOTS(0,0),
    AMULET_OF_FURY(0,141),
    BERSERKER_RING(0,50),
    BARROWS_GLOVES(0,0),

    TORMENTED_TENTACLE(0,100),
    GILDED_HELMET(0,169),
    GILDED_CHAINBODY(0,169),
    GILDED_PLATESKIRT(0,169),
    KREEARA_CROSSBOW(0,310),
    KREEARA_HELMET(0,310),
    KREEARA_CHESTPLATE(0,310),
    KREEARA_CHAINSKIRT(0,310),
    SKOLL_STAFF(0,80),
    MAGEBEAST_HELM(0,200),
    MAGEBEAST_BODY(0,200),
    MAGEBEAST_LEGS(0,200),

    IMP_HANDCANNON(0,100),
    IMPSPAWN_WINGS(0,100),
    COIF_IMP(0,100),
    LEATHER_BODY_IMP(0,100),
    CHAPS_IMP(0,100),
    IMP_GLOVES(0,100),
    IMP_BOOTS(0,100),
    LORD_HELMET(0,200),
    LORD_BODY(0,200),
    LORD_LEGS(0,200),
    STARLIGHT_SWORD(0,200),
    INFERIOR_HELM(0,200),
    INFERIOR_BODY(0,200),
    INFERIOR_LEGS(0,200),
    DEMON_HOOD(0,530),
    DEMON_TOP(0,530),
    DEMON_BOTTOM(0,530),
    DEMON_MAUL(0,645),
    FRACTITE_WINGS(0,350),
    NUETRON_DAGGER(0,620),
    NUETRON_BOOTS(0,350),
    NUETRON_GAUNTLETS(0,350),
    INDROVOX_FULL_HELMET(0,930),
    INDROVOX_PLATEBODY(0,930),
    INDROVOX_PLATELEGS(0,930),
    INDROVOX_KITESHIELD(0,930),
    JOYXOX_SWORD(0,930),
    MALEFICENT_HELM(0,1999),
    MALEFICENT_BODY(0,1999),
    MALEFICENT_LEGS(0,1999),
    TITAN_CELESTIAL_STAFF(0,2300),
    AVATAR_TITAN_CAPE(0,2300),

    LUCIEN_AXE(0,4392),
    LUCIEN_CRYPT_WINGS(0,4392),
    LUCIEN_HELM(0,4392),
    LUCIEN_PLATEBODY(0,4392),
    LUCIEN_LEGS(0,4392),
    LUCIEN_WHIP(0,4392),
    LUCIEN_DEFENDER(0,4392),
    LUCIEN_CRYPT_GLOVES(0,4392),
    LUCIEN_BOOTS(0,4392),
    GANOPURP_STAFF(0,8500),
    GANOPURP_VISOR(0,8500),
    GANOPURP_PONCHO(0,8500),
    GANOPURP_LEGGINGS(0,8500),
    SORROW_BOW(0,8500),
    SORROW_HORN_COIF(0,8500),
    SORROW_BODY(0,8500),
    SORROW_CHAPS(0,8500),
    SHIKRUU_KATANA(0,8000),
    SHIKRUU_HELM(0,8000),
    SHIKRUU_BODY(0,8000),
    SHIKRUU_LEGS(0,8000),
    SHADOW_GLOVES(0,3000),
    SCYTHE_OF_HERCULES(0,12500),
    HERCULES_FULL_HELM(0,4865),
    HERCULES_FIGHTERBODY(0,4865),
    HERCULES_FIGHTERLEGS(0,4865),
    HERCULES_KITESHIELD(0,4865),
    HERCULES_CAPE(0,4865),
    HERCULES_GLOVES(0,4865),
    HERCULES_BOOTS(0,4865),
    ANGELS_FLAMETHROWER(0,2854),
    ANGELIC_HELM(0,2999),
    ANGELIC_BODY(0,2999),
    ANGELIC_PLATELEGS(0,2999),
    ANGELIC_AMULET(0,2999),
    ANGELIC_WINGS(0,2999),
    ANGELIC_GLOVES(0,2999),
    ANGELIC_BOOTS(0,2999),

    SATANIC_HELLBLADE(0,15000),
    SATANIC_FULL_HELM(0,5535),
    SATANIC_HELL_BODY(0,5535),
    SATANIC_HELL_LEGS(0,5535),
    SATANIC_TOKHAAR_KAL(0,5535),
    ROYAL_AMULET(0,5535),
    SATANIC_ANTI_HELLSHIELD(0,5535),
    RING_OF_SAURON_HELL(0,5535),
    SATANIC_GLOVES(0,5535),
    SATANIC_BOOTS(0,5535),
    ZEUS_FULL_HELM(0,7493),
    ZEUS_BODY(0,7493),
    ZEUS_LEGS(0,7493),
    ZEUS_HAMMER(0,17500),
    ZEUS_SHIELD(0,7493),
    ZEUS_FLAGCAPE(0,7493),
    ELECTRIC_GLOVES(0,6000),
    ELECTRIC_BOOTS(0,6000),
    HADES_FULL_HELM(0,6000),
    HADES_BODY(0,6000),
    HADES_LEGS(0,6000),
    HADES_HAMMER(0,16000),
    HADES_SHIELD(0,6000),
    GROUDON_FLAME_STAFF(0,16000),
    GROUDON_FLAME_POWER(0,16000),
    GROUDON_FLAME_HELM(0,16000),
    GROUDON_FLAME_BODY(0,16000),
    GROUDON_FLAME_LEGS(0,16000),
    GROUDON_FLAME_SHIELD(0,16000),
    GROUDON_FLAME_BOOTS(700000,16000),
    LAVA_RING(0,2500),

    STATIUS_WARHAMMER(0,169),
    VESTAS_LONGSWORD(0,169),
    SARADOMIN_SWORD(0,240),

    FROST_FULL_HELM(0,169),
    FROST_PLATEBODY(0,169),
    FROST_PLATELEGS(0,169),
    LIME_COIF(0,169),
    LIME_LEATHER_BODY(0,169),
    LIME_LEATHER_CHAPS(0,169),
    PINK_HOOD(0,169),
    PINK_ROBE_TOP(0,169),
    PINK_ROBE_BOTTOM(0,169),

    ABYSSAL_WHIP_COLORED(0,120),
    CHAOTIC_LONGSWORD(0,0),
    CHAOTIC_RAPIER(0,0),
    CHAOTIC_MAUL(0,0),
    CHARMING_IMP(0,0),
    DIVINE_SPIRIT_SHIELD(0,2000),

    BRUTAL_TENTACLE(0,1250),
    BRUTAL_MINIGUN(0,1250),
    BRUTAL_STAFF(0,1250),

    PREDATOR_REAPER(0,400),
    PREDATOR_OFFHAND(0,400),
    PREDATOR_HELM(0,400),
    PREDATOR_BODY(0,400),
    PREDATOR_LEGS(0,400),
    PREDATOR_BOOTS(0,400),
    ICE_FURY(0,1000),

    T5_MELEE_HELM(0,20000),
    T5_MELEE_BODY(0,20000),
    T5_MELEE_LEGS(0,20000),
    TRINITY_HAMMERS(0,20000),
    T5_RANGE_HELM(0,20000),
    T5_RANGE_BODY(0,20000),
    T5_RANGE_LEGS(0,20000),
    BLAST_BOW(0,20000),
    T5_MAGIC_HELM(0,20000),
    T5_MAGIC_BODY(0,20000),
    T5_MAGIC_LEGS(0,20000),
    ARTS_STAFF(0,20000),

    CORRUPT_MAXIBLOOD_HELM(0,75000),
    CORRUPT_MAXIBLOOD_PLATEBODY(0,75000),
    CORRUPT_MAXIBLOOD_LEGS(0,75000),
    CORRUPT_MAXIBLOOD_SPEAR(500000,75000),
    CORRUPT_ARCHIE_HELM(0,75000),
    CORRUPT_ARCHIE_BODY(0,75000),
    CORRUPT_ARCHIE_CHAPS(0,75000),
    CORRUPT_ARCHIE_BOW(200000,75000),
    CORRUPT_MOONLIGHT_HOOD(0,75000),
    CORRUPT_MOONLIGHT_ROBETOP(0,75000),
    CORRUPT_MOONLIGHT_ROBEBOTTOM(0,75000),
    CORRUPT_MOONLIGHT_STAFF(200000,75000),
    COLLECTOR_NECKLACE(80000,75000),
    COLLECTOR_RING(175000,0),

    CHRISTMAS_CRACKER(500000,0),
    FROZEN_RAPIER(0,1000),
    FROZEN_SHORTBOW(0,1000),
    FROZEN_STAFF(0,0),
    STEEL_TITAN_POUCH(0,0),
    OVERLOAD_4(0,0),

    DRAGONBALLZ_BONES(10000,0),
    _1B_BAG(0,0),

    AMERICAN_PERNIX_HOOD(0,0),
    AMERICAN_PERNIX_BODY(0,0),
    AMERICAN_PERNIX_LEGS(0,0),
    SLAYER_DUALSABER(0,0),
    SHADOW_NECKLACE(0,0),
    NATURESPAWN_NECKLACE(0,0),
    PIRATES_ANCOR(0,0),

    FREZIA_HELM(0,50000),
    FREZIA_BODY(0,50000),
    FREZIA_LEGS(0,50000),
    PERFECT_CELL_HELM(0,50000),
    PERFECT_CELL_BODY(0,50000),
    PERFECT_CELL_LEGS(0,50000),
    SUPER_BUU_HELM(0,50000),
    SUPER_BUU_BODY(0,50000),
    SUPER_BUU_LEGS(0,50000),

    DRAGON_RIDER_LANCE(0,125000),
    JUDICATOR_CROSSBOW(0,125000),
    PURIFIER_STAFF(150000,125000),
    DEFILED_MINIGUN(0,0),
    SUPREME_ATTACHMENT(70000,0),
    SS_AURA(0,0),
    OWNER_CAPE_GOODIE_BAG(33000000,0);


    // how many upgrade tokens the item is worth
    private final int marketValue;
    // how many upgrade tokens are received when this item is dissolved
    private final int dissolveValue;
    private final String name;

    Items(int marketValue, int dissolveValue) {
        this.marketValue = marketValue;
        this.dissolveValue = dissolveValue;
        this.name = this.name().replace("_"," ");
    }

    public int getMarketValueAfterTax(){
        return (int) (this.marketValue * 0.95);
    }

    public int getBestValue() {
        return this.dissolveValue >= getMarketValueAfterTax() ? this.dissolveValue : getMarketValueAfterTax();
    }

    public int getMarketValue() {
        return marketValue;
    }

    public int getDissolveValue() {
        return dissolveValue;
    }

    public String getName() {
        return this.name;
    }
}
